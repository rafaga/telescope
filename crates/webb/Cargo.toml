[package]
name = "webb"
version.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = ["crypted-db"]
esi-api-test = []
crypted-db = ["dep:uuid"]
puffin = ["dep:puffin"]
native-auth-flow = []

[dependencies]
chrono = "0.4.42"
hyper = { version = "1.7.0", features = ["server", "client", "http1"] }
hyper-tls = "0.6.0"
open = "5.3.2"
rfesi = { version = "0.50.0", default-features = false, features = ["rustls-tls", "random_state", "validate_jwt"] }
serde = { version = "1.0.225", features = ["serde_derive"] }
tokio = { version = "1.47.1", features = ["tokio-macros", "rt", "rt-multi-thread", "macros"] }
puffin = { version = "0.19.1", optional = true, default-features = false}
bytes = "1.10.1"
http-body-util = "0.1.3"
hyper-util = { version = "0.1.17", features = ["full"] }


# Not Windows:
[target.'cfg(not(windows))'.dependencies]
rusqlite = { version = "0.37.0", features = ["bundled-sqlcipher", "backup", "blob", "array"] }

# Windows:
[target.'cfg(windows)'.dependencies]
rusqlite = { version = "0.37.0", features = ["bundled-sqlcipher-vendored-openssl", "backup", "blob", "array"] }

#Not compiling WASM
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
uuid = { version = "1.18.1", features = ["v4", "v5"], optional = true }

#compiling WASM
[target.'cfg(target_arch = "wasm32")'.dependencies]
uuid = { version = "1.18.1", features = ["v4", "v5", "js"], optional = true }
